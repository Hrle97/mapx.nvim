#!/usr/bin/env bash
set -euo pipefail

declare -g base prog basedir rootdir
base="$(realpath -e "${BASH_SOURCE[0]}")"
prog="$(basename "$base")"
basedir="$(dirname "$base")"
rootdir="$(dirname "$basedir")"

function usage() {
  cat << EOF
Usage: $prog [opt...] SUITE [..]

Run mapx tests.

Options:
  -h         Display usage information
  -a         Run all tests
EOF
}

function main() {
  local -a suites
  local opt OPTARG
  local -i OPTIND
  local config="{}"
  while getopts "ha" opt "$@"; do
    case "$opt" in
    h)
      usage
      return 0
      ;;
    a)
      for f in "$rootdir/test/"*.lua; do
        suites+=("$(basename --suffix ".lua" "$f")")
      done
      ;;
    \?)
      return 1
      ;;
    esac
  done
  shift $((OPTIND - 1))
  if [[ $# -gt 0 ]]; then
    suites=("$@")
  fi
  local suite
  for suite in "${suites[@]}"; do
    if [[ -z "$suite" ]]; then
      usage
      return 1
    fi
    if [[ ! -f "$rootdir/test/$suite.lua" ]]; then
      echo "error: suite not found: $suite" >&2
      return 1
    fi
    echo "RUN  $suite"
    if nvim --headless --noplugin \
      -u "$rootdir/scripts/minimal.vim" \
      -c "luafile $rootdir/scripts/testrunner.lua" \
      -c "lua runTestFile('$rootdir/test/$suite.lua')" \
      -c ':q' 2>&1; then
      echo "PASS"
    else
      echo "FAIL"
      return 1
    fi
  done
}

main "$@"
